#!/bin/bash
#
# Script used to generate Cscope and Ctags index files under current directory
# Also added interruption handle capabilities. Tested under Fedora 13 &
# Ubuntu 12.04 LTS edition
#
# Author: BalaC
#

# Function used to show spin motion
symbol="/-\|"
symindex=0
spin() {
	((symindex==${#symbol})) && symindex=0
	echo -n "${symbol:symindex:1}${symbol:symindex:1}${symbol:symindex:1}${symbol:symindex:1} ]" 2>/dev/null
	echo -ne "\b\b\b\b\b\b" 2>/dev/null
	symindex=$symindex+1
}

# Function to be invoked after the spin motion ends
endspin() {
	echo -n "DONE ]" 2>/dev/null
	echo "" 2>/dev/null
}

# General cleanup function used to remove unwanted stuff before exit
cleanup_func() {
	rm -f .balac_script_pid > /dev/null 2>&1
	echo ""
	exit $1
}

# Function which installs interruption handle
install_trap_handle() {
	func="$1" ; shift
	for signal ; do
		trap "$func $signal" "$signal"
	done
}

# Actual interruption function which was registered
trap_func() {
	kill -15 `cat .build_script_pid` > /dev/null 2>&1
	echo -ne "\rCaught $1 signal, Please wait cleaning up unfinished jobs\n\n" 2>/dev/null
	sleep 1
	rm -f cscope.* > /dev/null 2>&1
	rm -f tags > /dev/null 2>&1
	cleanup_func 1
}

# Function which gets forked
fork_func() {
	cscope -b -q -R > /dev/null 2>&1
	ctags -R * > /dev/null 2>&1
	rm -f .build_script_pid > /dev/null 2>&1
}

# Function which checks whether required binary are installed
check_req() {
	if ! cmd_loc="$(type -p "cscope")" || [ -z "$cmd_loc" ]; then
		echo "Expected binary \"cscope\" not available, script can't be executed"
		cleanup_func 2
	fi
	if ! cmd_loc="$(type -p "ctags")" || [ -z "$cmd_loc" ]; then
		echo "Expected binary \"ctags\" not available, script can't be executed"
		cleanup_func 2
	fi
}

#
# Script execution starts here
#

# Check for required binary
check_req
echo ""
# Install a interruption handler to catch Ctrl+C combination
install_trap_handle trap_func INT TERM
# Fork the cscope and ctags index generation
fork_func &
# Catch the PID, it will be used while killing under interruption handler
echo $! > .build_script_pid
# Check for the presence of index files
if [ -f cscope.in.out ] || [ -f cscope.po.out ] || [ -f tags ]; then
	echo -n "Updating index files............[ "
else
	echo -n "Building index files............[ "
fi
# Show the spin motion till the index files are generated
while [ -s .build_script_pid ]
do
	spin
done
endspin
# Do the cleanup work
cleanup_func 0
